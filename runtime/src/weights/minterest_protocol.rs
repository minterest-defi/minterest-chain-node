//! Autogenerated weights for minterest_protocol
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2021-05-19, STEPS: [50, ], REPEAT: 20, LOW RANGE: [], HIGH RANGE: []
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// ./target/release/minterest
// benchmark
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=minterest_protocol
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --output=./runtime/src/weights/minterest_protocol.rs

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for minterest_protocol.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> minterest_protocol::WeightInfo for WeightInfo<T> {
	fn create_pool() -> Weight {
		(50_585_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(5 as Weight))
	}
	fn deposit_underlying() -> Weight {
		(363_592_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(17 as Weight))
			.saturating_add(T::DbWeight::get().writes(11 as Weight))
	}
	fn redeem() -> Weight {
		(658_761_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(41 as Weight))
			.saturating_add(T::DbWeight::get().writes(11 as Weight))
	}
	fn redeem_underlying() -> Weight {
		(681_829_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(41 as Weight))
			.saturating_add(T::DbWeight::get().writes(11 as Weight))
	}
	fn redeem_wrapped() -> Weight {
		(656_296_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(41 as Weight))
			.saturating_add(T::DbWeight::get().writes(11 as Weight))
	}
	fn borrow() -> Weight {
		(717_756_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(41 as Weight))
			.saturating_add(T::DbWeight::get().writes(10 as Weight))
	}
	fn repay() -> Weight {
		(400_030_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(16 as Weight))
			.saturating_add(T::DbWeight::get().writes(10 as Weight))
	}
	fn repay_all() -> Weight {
		(401_166_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(16 as Weight))
			.saturating_add(T::DbWeight::get().writes(10 as Weight))
	}
	fn repay_on_behalf() -> Weight {
		(403_301_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(16 as Weight))
			.saturating_add(T::DbWeight::get().writes(10 as Weight))
	}
	fn transfer_wrapped() -> Weight {
		(648_334_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(43 as Weight))
			.saturating_add(T::DbWeight::get().writes(10 as Weight))
	}
	fn enable_is_collateral() -> Weight {
		(54_390_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn disable_is_collateral() -> Weight {
		(333_062_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(31 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn claim_mnt() -> Weight {
		(1_146_746_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(35 as Weight))
			.saturating_add(T::DbWeight::get().writes(15 as Weight))
	}
}
